<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.3">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2024-01-18T07:42:04+00:00</updated><id>/feed.xml</id><title type="html">Bradley Turner’s Portfolio</title><subtitle>Hey, I'm a 26 year old Packaging Designer at abbe. I also run a small business, Algebuckina Design, in my spare time. I'm looking at moving away from the packaging industry to something more challenging and diverse than cardboard boxes. I am proficient in Solidworks and marking up drawing sheets. I'm also a very keen model builder, always wanting to design and build something new for myself or others.
I love a challenge and thrive when I'm thrown into the deep end. Although I have a degree in Industrial Design, I've worked on coding, virtual reality, web design, content creation, streaming and event projects after I graduating to push myself and learn new things. </subtitle><author><name>Braldey Turner</name></author><entry><title type="html">Mechanical Wood Keyboard</title><link href="/algebuckina/design/2024/01/16/wood-keyboard.html" rel="alternate" type="text/html" title="Mechanical Wood Keyboard" /><published>2024-01-16T00:00:00+00:00</published><updated>2024-01-16T00:00:00+00:00</updated><id>/algebuckina/design/2024/01/16/wood-keyboard</id><content type="html" xml:base="/algebuckina/design/2024/01/16/wood-keyboard.html">&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;My fascination with keyboards started when the backlit keyboard I’d been using for 3 years started to fall apart, I wanted something that would last. One thing came to another, and I ended up diving down the rabbit hole that is mechanical keyboards and found longevity and sustainability and mostly ignored in the entire computer peripherals space. I ended up getting a Unicomp terminal keyboard as the original keyboards from IBM still work to this day, but I had an urge to develop and sell a more sustainable mechanical keyboard.&lt;/p&gt;

&lt;p&gt;I started the company, Algebuckina Design, and started working on prototypes with my newly acquired CNC router, and have been through many iterations, finding multiple tools and cut files online to try and get to a functional keyboard (as well as struggling through the teething problems of a hobby CNC router) but I’m now very close to having a few working prototypes for usability testing.&lt;/p&gt;

&lt;h2 id=&quot;building-my-own-keyboard&quot;&gt;Building my own keyboard&lt;/h2&gt;

&lt;p&gt;Before diving into making a keyboard completely from scratch, I wanted to see what the budget mechanical keyboard market looked like and how hard it was to assemble a keyboard myself. I chose &lt;a href=&quot;https://matias.ca/switches/quiet/&quot;&gt;Matias Quiet Click&lt;/a&gt; switches based on a the high tactile bump and quiet sound and an inexpensive PCB, case, plate and keycap set with some cheap stablisers. I found soldering quite easy and had everything assembled within about an hour or 2, and although the documentation for the PCB firmware was a bit hit and miss, I was able to flash the firmware to have a functional 60% keyboard which I still use today.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;&quot; alt=&quot;1st keyboard build&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This experience did show me a few things:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Don’t use alps style switches, the keycap set was really hard to come by&lt;/li&gt;
  &lt;li&gt;I’d need to create internal documentation for the firmware flashing process or maybe even automate it&lt;/li&gt;
  &lt;li&gt;I can’t cheap out on stablisers, the ones I got were terrible and very rattly&lt;/li&gt;
  &lt;li&gt;I prefer the feel of my Unicomp Keyboard, so anything I make for myself will need a metallic click&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;designing-everything-from-scratch&quot;&gt;Designing everything from scratch&lt;/h2&gt;

&lt;p&gt;With my 1st hand research done, I then wanted to design an entire keyboard from scratch, PCB and all. Though I only had access to an old version of Pro Desktop from 2005 for CAD software and no idea how to design a PCB. After trying to lay everything out in pro desktop and crashing it many times, I sidelined working on the plate and case and begun work on the PCB, downloaded keiCAD and was promptly overwhelmed. I did eventually find &lt;a href=&quot;http://builder.swillkb.com/&quot;&gt;this tool&lt;/a&gt; that did help with a layered design, but not knowing how to design PCBs had me at a standstill.&lt;/p&gt;

&lt;h2 id=&quot;working-with-an-off-the-self-pcb&quot;&gt;Working with an off the self PCB&lt;/h2&gt;

&lt;p&gt;With designing my own PCB not being an option, I looked back to the place I got my 1st PCB, and they had one that suited my needs. Using it, and the tool I mentioned earlier, found out the CNC router I purchased and built from &lt;a href=&quot;https://www.bluecarve.com.au/product/bluecarve-bluey/&quot;&gt;BlueCarve CNC&lt;/a&gt; wasn’t set accurately enough to cut the plate that holds all the switches. After some research, adjustments and many plate prototypes later, I had a functional 1st prototype including some simple keycaps.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/algebuckina/portfolio/main/images/Projects/960x600.jpg&quot; alt=&quot;1st Keyboard Prototype photo&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This prototype was invaluable, and really highlighted the following:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Keycaps will need to be a different project entirely, making this more of a keyboard case, plate and PCB design project&lt;/li&gt;
  &lt;li&gt;Selling these as barebones kits might be an option as it was very easy to build the layered design&lt;/li&gt;
  &lt;li&gt;The layered design is a lot easier to make, but is quite bulky and not as nice to look at, so I want to break out into 2 designs, 1 cheaper, 1 more premium&lt;/li&gt;
  &lt;li&gt;I should be testing and checking my CNC router every now and then and adjust as needed&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;looking-to-open-source&quot;&gt;Looking to Open Source&lt;/h2&gt;

&lt;p&gt;While doing some research, I stumbled across &lt;a href=&quot;keyblist&quot;&gt;this resource on github&lt;/a&gt; which had a bunch of open source keyboards, cases and PCBs and found that the &lt;a href=&quot;garbert&quot;&gt;Garbert&lt;/a&gt; is very similar to what I wanted to create and had an MIT license which means I could use it for commercial use. I was considering doing this, but I didn’t want to make a 60% keyboard, neither did I want a screen or knob as it might drive the more mainstream market away. I’m also way too proud to just use someone elses design.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/KoBussLLC/grabert-hardware/main/doc/grabert_white_canvas_angled.jpg&quot; alt=&quot;Garbert keyboard render&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In this list, I did find a range of PCBs called &lt;a href=&quot;voyager&quot;&gt;Voyager&lt;/a&gt; which I plan to use for the final keyboard design, and means I don’t need to delve into PCB design &lt;em&gt;yet.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Also on the topic of open source, begun using freeCAD around this time too, which is far easier to use than a 20 year old CAD software, and it trades blows with what I am educated on, Solidworks, so I’ll be using it from now on.&lt;/p&gt;

&lt;h2 id=&quot;now-and-looking-forward&quot;&gt;Now, and looking forward&lt;/h2&gt;

&lt;h3 id=&quot;pcb&quot;&gt;PCB&lt;/h3&gt;

&lt;p&gt;As of right now, my holdup is getting my hands on one of the open source PCBs. I’m currently working out how to place an order for a small quanitity of PCBs that are fully assembled, but it seems the industry tries to make it as hard as possible for people new to everything to order prototype PCBs. I am looking to get in touch with circuitwise which is a NSW based PCB manufacturer who also does assembly, though their website is far from helpful so I am going to need to call them. After this is done I can move onto the following steps.&lt;/p&gt;

&lt;h3 id=&quot;skew-1&quot;&gt;Skew 1&lt;/h3&gt;

&lt;p&gt;Skew 1 will be based on the original concept of a layered design. It’ll be more cost effective due to the wood I can get from Koenig Machinery. The poplar panels come pre finished so I don’t need to clear coat or stain the wood which reduces production time from a few days to a few hours.&lt;/p&gt;

&lt;h3 id=&quot;skew-2&quot;&gt;Skew 2&lt;/h3&gt;

&lt;p&gt;Skew 2 is a more conventional mechanical keyboard design with a bottom case and keycap plate. The bottom case will be made with solid wood and CNC’d out, and the plate will use higher strength Plyco plywood for less flex while typing. The main par that sets the 2 skews apart is the standing staining and clear finishing step in the manufacturing process, which is why skew 2 will be priced as a premium option.&lt;/p&gt;

&lt;h3 id=&quot;keycaps&quot;&gt;Keycaps&lt;/h3&gt;

&lt;p&gt;From experimentation, keycaps are going to be a lot harder than 1st thought. I will need to build custom jigs to cut them, and skew 1 (and possibly 2) keycaps will need plastic inserts which is why I want to break off this part of the mechanical keyboard project to it’s own thing because it’ll need it’s own prototyping.&lt;/p&gt;

&lt;h3 id=&quot;kits&quot;&gt;Kits&lt;/h3&gt;

&lt;p&gt;The fact that keycaps will be another major wait for this project, I am considering releasing Skew 1 as a kit that has BYO keycaps and keyswitches. These kind of kits seem to be very popular so selling it and getting a start to cashflow should be very helpful with both subsidising prototyping and motivation to finish the keyboard.&lt;/p&gt;</content><author><name>Bradley Turner</name></author><category term="Algebuckina" /><category term="Design" /><category term="algebuckina design" /><category term="design" /><category term="tech" /><summary type="html">Introduction My fascination with keyboards started when the backlit keyboard I’d been using for 3 years started to fall apart, I wanted something that would last. One thing came to another, and I ended up diving down the rabbit hole that is mechanical keyboards and found longevity and sustainability and mostly ignored in the entire computer peripherals space. I ended up getting a Unicomp terminal keyboard as the original keyboards from IBM still work to this day, but I had an urge to develop and sell a more sustainable mechanical keyboard. I started the company, Algebuckina Design, and started working on prototypes with my newly acquired CNC router, and have been through many iterations, finding multiple tools and cut files online to try and get to a functional keyboard (as well as struggling through the teething problems of a hobby CNC router) but I’m now very close to having a few working prototypes for usability testing. Building my own keyboard Before diving into making a keyboard completely from scratch, I wanted to see what the budget mechanical keyboard market looked like and how hard it was to assemble a keyboard myself. I chose Matias Quiet Click switches based on a the high tactile bump and quiet sound and an inexpensive PCB, case, plate and keycap set with some cheap stablisers. I found soldering quite easy and had everything assembled within about an hour or 2, and although the documentation for the PCB firmware was a bit hit and miss, I was able to flash the firmware to have a functional 60% keyboard which I still use today. This experience did show me a few things: Don’t use alps style switches, the keycap set was really hard to come by I’d need to create internal documentation for the firmware flashing process or maybe even automate it I can’t cheap out on stablisers, the ones I got were terrible and very rattly I prefer the feel of my Unicomp Keyboard, so anything I make for myself will need a metallic click Designing everything from scratch With my 1st hand research done, I then wanted to design an entire keyboard from scratch, PCB and all. Though I only had access to an old version of Pro Desktop from 2005 for CAD software and no idea how to design a PCB. After trying to lay everything out in pro desktop and crashing it many times, I sidelined working on the plate and case and begun work on the PCB, downloaded keiCAD and was promptly overwhelmed. I did eventually find this tool that did help with a layered design, but not knowing how to design PCBs had me at a standstill. Working with an off the self PCB With designing my own PCB not being an option, I looked back to the place I got my 1st PCB, and they had one that suited my needs. Using it, and the tool I mentioned earlier, found out the CNC router I purchased and built from BlueCarve CNC wasn’t set accurately enough to cut the plate that holds all the switches. After some research, adjustments and many plate prototypes later, I had a functional 1st prototype including some simple keycaps. This prototype was invaluable, and really highlighted the following: Keycaps will need to be a different project entirely, making this more of a keyboard case, plate and PCB design project Selling these as barebones kits might be an option as it was very easy to build the layered design The layered design is a lot easier to make, but is quite bulky and not as nice to look at, so I want to break out into 2 designs, 1 cheaper, 1 more premium I should be testing and checking my CNC router every now and then and adjust as needed Looking to Open Source While doing some research, I stumbled across this resource on github which had a bunch of open source keyboards, cases and PCBs and found that the Garbert is very similar to what I wanted to create and had an MIT license which means I could use it for commercial use. I was considering doing this, but I didn’t want to make a 60% keyboard, neither did I want a screen or knob as it might drive the more mainstream market away. I’m also way too proud to just use someone elses design. In this list, I did find a range of PCBs called Voyager which I plan to use for the final keyboard design, and means I don’t need to delve into PCB design yet. Also on the topic of open source, begun using freeCAD around this time too, which is far easier to use than a 20 year old CAD software, and it trades blows with what I am educated on, Solidworks, so I’ll be using it from now on. Now, and looking forward PCB As of right now, my holdup is getting my hands on one of the open source PCBs. I’m currently working out how to place an order for a small quanitity of PCBs that are fully assembled, but it seems the industry tries to make it as hard as possible for people new to everything to order prototype PCBs. I am looking to get in touch with circuitwise which is a NSW based PCB manufacturer who also does assembly, though their website is far from helpful so I am going to need to call them. After this is done I can move onto the following steps. Skew 1 Skew 1 will be based on the original concept of a layered design. It’ll be more cost effective due to the wood I can get from Koenig Machinery. The poplar panels come pre finished so I don’t need to clear coat or stain the wood which reduces production time from a few days to a few hours. Skew 2 Skew 2 is a more conventional mechanical keyboard design with a bottom case and keycap plate. The bottom case will be made with solid wood and CNC’d out, and the plate will use higher strength Plyco plywood for less flex while typing. The main par that sets the 2 skews apart is the standing staining and clear finishing step in the manufacturing process, which is why skew 2 will be priced as a premium option. Keycaps From experimentation, keycaps are going to be a lot harder than 1st thought. I will need to build custom jigs to cut them, and skew 1 (and possibly 2) keycaps will need plastic inserts which is why I want to break off this part of the mechanical keyboard project to it’s own thing because it’ll need it’s own prototyping. Kits The fact that keycaps will be another major wait for this project, I am considering releasing Skew 1 as a kit that has BYO keycaps and keyswitches. These kind of kits seem to be very popular so selling it and getting a start to cashflow should be very helpful with both subsidising prototyping and motivation to finish the keyboard.</summary></entry><entry><title type="html">Custom Car Head Unit</title><link href="/algebuckina/design/2024/01/14/custom-car-head-unit.html" rel="alternate" type="text/html" title="Custom Car Head Unit" /><published>2024-01-14T00:00:00+00:00</published><updated>2024-01-14T00:00:00+00:00</updated><id>/algebuckina/design/2024/01/14/custom-car-head-unit</id><content type="html" xml:base="/algebuckina/design/2024/01/14/custom-car-head-unit.html">&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;I got my Mazda MX5 a few years ago, and it came with some terrible Sony head unit. It plays CDs and connects to my old iPod but refuses to interface with my phone and the Bluetooth sound quality is terrible. Looking on the market, functionality wise, bringing an older car like mine up to modern standards cost upwards of $500, and they don’t even have a volume knob. When I saw this, I chose to take things into my own hands. The head unit I designed uses off the shelf components (when they are in stock, sorry) to make a cheaper competitor than the competition, while keeping the option for android auto compatibility.&lt;/p&gt;

&lt;p&gt;After working on the keyboard for so long, I wanted something I could release quickly as an open-source product to get my companies name out there, and I thought a head unit for my car would be a simple thing to work on. Wow was I wrong. My 1st few prototypes worked but liked falling out of my dash when I accelerated hard, and I never implemented a volume knob. Progress on the unit was going well until my MX5 started having issues and it turned more into a project car than a testing new things on it car. So, the project has stayed dormant until recently, one of my friend’s head unit from Sony just died and instead of looking for a new one, he was wondering if he could use my design, so I’ve been looking to start work on it again. I’m looking at 3D printing the enclosure this time around instead of cutting it on my CNC router and adding a volume knob lol.&lt;/p&gt;</content><author><name>Bradley Turner</name></author><category term="Algebuckina" /><category term="Design" /><category term="algebuckina design" /><category term="design" /><category term="cars" /><category term="tech" /><summary type="html">Introduction I got my Mazda MX5 a few years ago, and it came with some terrible Sony head unit. It plays CDs and connects to my old iPod but refuses to interface with my phone and the Bluetooth sound quality is terrible. Looking on the market, functionality wise, bringing an older car like mine up to modern standards cost upwards of $500, and they don’t even have a volume knob. When I saw this, I chose to take things into my own hands. The head unit I designed uses off the shelf components (when they are in stock, sorry) to make a cheaper competitor than the competition, while keeping the option for android auto compatibility. After working on the keyboard for so long, I wanted something I could release quickly as an open-source product to get my companies name out there, and I thought a head unit for my car would be a simple thing to work on. Wow was I wrong. My 1st few prototypes worked but liked falling out of my dash when I accelerated hard, and I never implemented a volume knob. Progress on the unit was going well until my MX5 started having issues and it turned more into a project car than a testing new things on it car. So, the project has stayed dormant until recently, one of my friend’s head unit from Sony just died and instead of looking for a new one, he was wondering if he could use my design, so I’ve been looking to start work on it again. I’m looking at 3D printing the enclosure this time around instead of cutting it on my CNC router and adding a volume knob lol.</summary></entry><entry><title type="html">SWGEmu Mod Manager</title><link href="/algebuckina/design/2023/03/23/swgemu-mod-manager.html" rel="alternate" type="text/html" title="SWGEmu Mod Manager" /><published>2023-03-23T00:00:00+00:00</published><updated>2023-03-23T00:00:00+00:00</updated><id>/algebuckina/design/2023/03/23/swgemu-mod-manager</id><content type="html" xml:base="/algebuckina/design/2023/03/23/swgemu-mod-manager.html">&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;I’ve been a community manager and content creator at Mod the Galaxy for many years now, and throughout my time there, I’ve always needed to tell people how to install mods, and a mod manager would fix this. So naturally I chose to write one myself. I hadn’t written software since year 9 in high school, so it took some time to get back into it, but I was able to get a WinForms project started and the UI done in a few afternoons, taking the colours from the in-game UI, and making my own custom buttons based on it too. I started working on button functionality and got stuck on trying to load and change information in the game files so the project sat on the back burner for about a year.&lt;/p&gt;

&lt;p&gt;Throughout this year, a SWGEmu staff member started hinting that I should finish work on it to get it to a functional state. This went on for a while till he said the SWGEmu project was nearing its end, and a content creator would be needed on the team once they move to a full play server and someone who made a mod manager would be looked upon favourably for this position ‘wink wink’. So I dove back into the project and, with some research, got the manager functional and released it to the public. And a few months later, I was accepted onto the SWGEmu team as an event and quest coordinator.&lt;/p&gt;

&lt;p&gt;Although I want to rewrite the mod manager in .NET Maui, the WinForms version is still up for download with all its source code HERE »&lt;/p&gt;</content><author><name>Bradley Turner</name></author><category term="Algebuckina" /><category term="Design" /><category term="algebuckina design" /><category term="design" /><category term="code" /><category term="MTG" /><summary type="html">Introduction I’ve been a community manager and content creator at Mod the Galaxy for many years now, and throughout my time there, I’ve always needed to tell people how to install mods, and a mod manager would fix this. So naturally I chose to write one myself. I hadn’t written software since year 9 in high school, so it took some time to get back into it, but I was able to get a WinForms project started and the UI done in a few afternoons, taking the colours from the in-game UI, and making my own custom buttons based on it too. I started working on button functionality and got stuck on trying to load and change information in the game files so the project sat on the back burner for about a year. Throughout this year, a SWGEmu staff member started hinting that I should finish work on it to get it to a functional state. This went on for a while till he said the SWGEmu project was nearing its end, and a content creator would be needed on the team once they move to a full play server and someone who made a mod manager would be looked upon favourably for this position ‘wink wink’. So I dove back into the project and, with some research, got the manager functional and released it to the public. And a few months later, I was accepted onto the SWGEmu team as an event and quest coordinator. Although I want to rewrite the mod manager in .NET Maui, the WinForms version is still up for download with all its source code HERE »</summary></entry><entry><title type="html">Baulkham Hills Uniting Church Website</title><link href="/algebuckina/design/2022/01/07/baulkham-hills-uniting-church-website.html" rel="alternate" type="text/html" title="Baulkham Hills Uniting Church Website" /><published>2022-01-07T00:00:00+00:00</published><updated>2022-01-07T00:00:00+00:00</updated><id>/algebuckina/design/2022/01/07/baulkham-hills-uniting-church-website</id><content type="html" xml:base="/algebuckina/design/2022/01/07/baulkham-hills-uniting-church-website.html">&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;I’d recently delved into writing HTML code for a portfolio assignment for university (they wanted us to use WordPress. I used it for about an hour and hated it so started learning HTML) and the Church I attended at the time was looking to revamp their digital presence and was asking for a focus group to be formed around that. I put my hand up and first worked on overhauling their livestreamed services which was timely as covid forced us all into lockdown, but with that project wrapped up in a few weeks, the group wanted to remake their website from the ground up and I took it upon myself to contribute a proposal to the group.&lt;/p&gt;

&lt;p&gt;My website concept was based on NodeBB, a free and open-source forum software that could have custom pages made for it. The forum aspect would make it easier for staff and community members to post information to the site, and the custom pages would let us keep a front-end website like our past one. My proposal was up against another which was just a different hosting software with an identical looking website to the old one. Everyone at the meeting wished me to work more on my design and transfer all the information on the old website over and redesign it.&lt;/p&gt;

&lt;p&gt;The custom pages plugin took HTML and CSS code and displays it on a blank page with the built-in navigation bar from NodeBB, so I used some of the code from my attempt at writing my own website from scratch as well as writing new interactions that I learnt from YouTube videos and w3schools tutorials and ended up with something that now stands as the Church’s Website.&lt;/p&gt;

&lt;p&gt;I have since left the Church, but I still support their website and apply any changes they request at no cost.&lt;/p&gt;

&lt;p&gt;Before: Homepage / Youth and Young Adults
After: Homepage / Youth and Young Adults&lt;/p&gt;</content><author><name>Bradley Turner</name></author><category term="Algebuckina" /><category term="Design" /><category term="algebuckina design" /><category term="code" /><summary type="html">Introduction I’d recently delved into writing HTML code for a portfolio assignment for university (they wanted us to use WordPress. I used it for about an hour and hated it so started learning HTML) and the Church I attended at the time was looking to revamp their digital presence and was asking for a focus group to be formed around that. I put my hand up and first worked on overhauling their livestreamed services which was timely as covid forced us all into lockdown, but with that project wrapped up in a few weeks, the group wanted to remake their website from the ground up and I took it upon myself to contribute a proposal to the group. My website concept was based on NodeBB, a free and open-source forum software that could have custom pages made for it. The forum aspect would make it easier for staff and community members to post information to the site, and the custom pages would let us keep a front-end website like our past one. My proposal was up against another which was just a different hosting software with an identical looking website to the old one. Everyone at the meeting wished me to work more on my design and transfer all the information on the old website over and redesign it. The custom pages plugin took HTML and CSS code and displays it on a blank page with the built-in navigation bar from NodeBB, so I used some of the code from my attempt at writing my own website from scratch as well as writing new interactions that I learnt from YouTube videos and w3schools tutorials and ended up with something that now stands as the Church’s Website. I have since left the Church, but I still support their website and apply any changes they request at no cost. Before: Homepage / Youth and Young Adults After: Homepage / Youth and Young Adults</summary></entry><entry><title type="html">Widevision VR</title><link href="/western/sydney/university/2021/12/06/widevision-vr.html" rel="alternate" type="text/html" title="Widevision VR" /><published>2021-12-06T00:00:00+00:00</published><updated>2021-12-06T00:00:00+00:00</updated><id>/western/sydney/university/2021/12/06/widevision-vr</id><content type="html" xml:base="/western/sydney/university/2021/12/06/widevision-vr.html">&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;Widevision is an event held each year to showcase Western Sydney Universities Industrial Design cohort. In 2020 the exhibition was moved to a zoom meeting rather than an in-person event due to Covid. In 2021, the university proposed doing a VR exhibition that one of the students would work on for the honours work. I chose to take up this challenge.&lt;/p&gt;

&lt;p&gt;I had to teach myself everything from scratch because I had no knowledge of virtual reality at all. I started by developing 2 concepts. A VR space people could attend from anywhere, or a guided tour augmented reality headset. With lockdown restricting movement, I went with the 1st option (though I did have a working AR headset that I could play open TTD on) and begun learning SteamVRs hammer tools, using SolidWorks to create my assets and importing them into SteamVR and eventually having an environment that both myself and my supervisor were really proud of.&lt;/p&gt;

&lt;p&gt;As of posting, 2520 different people have entered and experienced this VR environment, and 33 choose to use it as their default environment when launching their VR headset. If you’d like to check it out, you can subscribe to it with SteamVR HERE »&lt;/p&gt;</content><author><name>Bradley Turner</name></author><category term="Western" /><category term="Sydney" /><category term="University" /><category term="WSU" /><category term="design" /><category term="VR" /><summary type="html">Introduction Widevision is an event held each year to showcase Western Sydney Universities Industrial Design cohort. In 2020 the exhibition was moved to a zoom meeting rather than an in-person event due to Covid. In 2021, the university proposed doing a VR exhibition that one of the students would work on for the honours work. I chose to take up this challenge. I had to teach myself everything from scratch because I had no knowledge of virtual reality at all. I started by developing 2 concepts. A VR space people could attend from anywhere, or a guided tour augmented reality headset. With lockdown restricting movement, I went with the 1st option (though I did have a working AR headset that I could play open TTD on) and begun learning SteamVRs hammer tools, using SolidWorks to create my assets and importing them into SteamVR and eventually having an environment that both myself and my supervisor were really proud of. As of posting, 2520 different people have entered and experienced this VR environment, and 33 choose to use it as their default environment when launching their VR headset. If you’d like to check it out, you can subscribe to it with SteamVR HERE »</summary></entry><entry><title type="html">Baulkham Hills Uniting Church Livestreaming</title><link href="/algebuckina/design/2021/07/08/baulkham-hills-uniting-church-livestreaming.html" rel="alternate" type="text/html" title="Baulkham Hills Uniting Church Livestreaming" /><published>2021-07-08T00:00:00+00:00</published><updated>2021-07-08T00:00:00+00:00</updated><id>/algebuckina/design/2021/07/08/baulkham-hills-uniting-church-livestreaming</id><content type="html" xml:base="/algebuckina/design/2021/07/08/baulkham-hills-uniting-church-livestreaming.html">&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;</content><author><name>Bradley Turner</name></author><category term="Algebuckina" /><category term="Design" /><category term="algebuckina design" /><category term="tech" /><summary type="html">Introduction</summary></entry><entry><title type="html">Retoro Bus Shelter</title><link href="/western/sydney/university/2020/11/15/bus-shelter.html" rel="alternate" type="text/html" title="Retoro Bus Shelter" /><published>2020-11-15T00:00:00+00:00</published><updated>2020-11-15T00:00:00+00:00</updated><id>/western/sydney/university/2020/11/15/bus-shelter</id><content type="html" xml:base="/western/sydney/university/2020/11/15/bus-shelter.html">&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;The Bus shelter was my most successful project at university excluding my major work. The 3rd year class on design innovation wanted us to make bus shelters more aesthetically appealing and help us develop our materials selection and sheet metal design skills.&lt;/p&gt;

&lt;p&gt;2 days before our assignment was due, our tutors agreed to have a quick meeting with each team and when we presented our design, they pretty much told us it was unmanufacturable. So straight after that meeting, I took our original concept and redesigned the entire thing in 18 hours. I stuck with the same shape and style, but completely remade every part in SolidWorks, including designing fasteners, hinges and adding bolts. The entire roof of the bus shelter is actually 1 piece of metal, formed into the roof shape with SolidWorks’ sheet metal tool. Surviving on caffeine, I finished the design at 6am the next morning and handed it off to the rest of my team to do all our engineering drawings.&lt;/p&gt;

&lt;p&gt;We ended up topping the class, having the best model (which I constructed piece by piece) and the most manufacturable design. We were even invited to Widevision 2021 where I was able to showcase the model we made.&lt;/p&gt;

&lt;p&gt;##&lt;/p&gt;</content><author><name>Bradley Turner</name></author><category term="Western" /><category term="Sydney" /><category term="University" /><category term="WSU," /><category term="design" /><summary type="html">Introduction The Bus shelter was my most successful project at university excluding my major work. The 3rd year class on design innovation wanted us to make bus shelters more aesthetically appealing and help us develop our materials selection and sheet metal design skills. 2 days before our assignment was due, our tutors agreed to have a quick meeting with each team and when we presented our design, they pretty much told us it was unmanufacturable. So straight after that meeting, I took our original concept and redesigned the entire thing in 18 hours. I stuck with the same shape and style, but completely remade every part in SolidWorks, including designing fasteners, hinges and adding bolts. The entire roof of the bus shelter is actually 1 piece of metal, formed into the roof shape with SolidWorks’ sheet metal tool. Surviving on caffeine, I finished the design at 6am the next morning and handed it off to the rest of my team to do all our engineering drawings. We ended up topping the class, having the best model (which I constructed piece by piece) and the most manufacturable design. We were even invited to Widevision 2021 where I was able to showcase the model we made. ##</summary></entry></feed>